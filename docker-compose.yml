version: '3.7'

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  front-tier:
  back-tier:

services:

  prometheus:
    image: prom/prometheus:v2.36.2
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
#      - alertmanager:alertmanager # Disabled alertmanager link
#      - pushgateway:pushgateway
    depends_on:
      - cadvisor
#      - pushgateway
    networks:
      - back-tier
    restart: always
    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}
      resources:
        limits:
          cpus: '0.40'
          memory: 768M
        reservations:
          cpus: '0.20'
          memory: 384M

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.05'
          memory: 128M
        reservations:
          cpus: '0.025'
          memory: 64M

#  alertmanager:
#    image: prom/alertmanager
#    ports:
#      - 9093:9093
#    volumes:
#      - ./alertmanager/:/etc/alertmanager/
#    networks:
#      - back-tier
#    restart: always
#    command:
#      - '--config.file=/etc/alertmanager/config.yml'
#      - '--storage.path=/alertmanager'
#    deploy:
##      placement:
##        constraints:
##          - node.hostname == ${HOSTNAME}
#      resources:
#        limits:
#          cpus: '0.05'
#          memory: 128M
#        reservations:
#          cpus: '0.025'
#          memory: 64M

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.10'
          memory: 128M
        reservations:
          cpus: '0.05'
          memory: 64M

  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.20'
          memory: 512M
        reservations:
          cpus: '0.10'
          memory: 256M

#  pushgateway:
#    image: prom/pushgateway
#    restart: always
#    expose:
#      - 9091
#    ports:
#      - "9091:9091"
#    networks:
#      - back-tier

  loki-worker:
    image: grafana/loki:latest
    networks:
      - back-tier
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: 256M
        reservations:
          cpus: '0.075'
          memory: 128M
